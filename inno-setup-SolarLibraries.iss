; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{04CC0EF2-35C2-4E1E-9DAD-2F34B67F6273}
AppName=SolARFramework
AppVersion=0.2
;AppVerName=SolARFramework 0.2
AppPublisher=b<>com
AppPublisherURL=http://www.b-com.com/
AppSupportURL=http://www.b-com.com/
AppUpdatesURL=http://www.b-com.com/
DefaultDirName={sd}\SolARFramework
DefaultGroupName=SolARFramework
LicenseFile=C:\Users\atadrist\BCOM\SolAR\sources-forge\SolARFramework\LICENSE
OutputBaseFilename=SolarFramework-installer
SetupIconFile=C:\Users\atadrist\BCOM\SolAR\solar.ico
UninstallFilesDir={app}\uninst
Compression=lzma/fast
; Tell Windows Explorer to reload the environment
ChangesEnvironment=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

; list of components that can be installed
[Components]
Name: "SolARlibraries"; Description: "SolAR libraries"; Types: full
Name: "QTinstallation"; Description: "QT creator dependencies"; Types: full
Name: "ThirdParties"; Description: "Third Party libraries"; Types: full
Name: "Samples"; Description: "Sample code"; Types: full

; source files included inside the installer
[Files]
Source: "K:\tmp\azdine\SolarSetup\installeurs\SolARLibraries\bcomBuild\*"; DestDir: "{app}\SolARLibraries\bcomBuild"; Flags: ignoreversion recursesubdirs createallsubdirs; Components: "SolARlibraries"
Source: "K:\tmp\azdine\SolarSetup\installeurs\forQT-only\Setup_pkg-config.exe"; DestDir: "{app}\uninst"; AfterInstall: RunOtherInstaller; Components: "QTinstallation"
Source: "K:\tmp\azdine\SolarSetup\installeurs\forQT-only\pkg-config_Uninstall.exe"; DestDir: "{app}\uninst"; Flags: ignoreversion recursesubdirs createallsubdirs; Components: "QTinstallation"
Source: "K:\tmp\azdine\Solar-20180116\builddefs\*"; DestDir: "{app}\SolARLibraries\builddefs"; Flags: ignoreversion recursesubdirs createallsubdirs; Components: "QTinstallation"
Source: "K:\tmp\azdine\SolarSetup\installeurs\thirdParties\thirdParties\*"; DestDir: "{app}\SolARLibraries\thirdParties"; Flags: ignoreversion recursesubdirs createallsubdirs; Components: "ThirdParties"
Source: "K:\tmp\azdine\SolarSetup\installeurs\Samples\*"; DestDir: "{app}\Samples"; Flags: ignoreversion recursesubdirs createallsubdirs; Components: "Samples"

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

; Regitry keys that will be created
[Registry]
Root: HKCU; Subkey: "Environment"; ValueType:string; ValueName: "BCOMDEVROOT"; ValueData:{code:bcomdevrootPath}; Flags: uninsdeletekey

; to be run during uninstallation
[UninstallRun]
Filename: "{app}\uninst\pkg-config_Uninstall.exe"; Components: "QTinstallation"

; custom functions and procedures
[Code]
function NextButtonClick(CurPageID: Integer): Boolean;
begin
  Result := True;
  { if we're on the directory selection page and the value returned by }
  { the WizardDirValue function contains at least one space, then... }
  if (CurPageID = wpSelectDir) and (Pos(' ', WizardDirValue) > 0) then
  begin
    Result := False;
    MsgBox('Target installation directory cannot contain spaces. ' +
      'Choose a different one.', mbError, MB_OK);
  end;
end;

procedure RunOtherInstaller;
var
  ResultCode: Integer;
begin
  if not Exec(ExpandConstant('{app}\uninst\Setup_pkg-config.exe'), '', '', SW_SHOWNORMAL,
    ewWaitUntilTerminated, ResultCode)
  then
    MsgBox('Other installer failed to run!' + #13#10 +
      SysErrorMessage(ResultCode), mbError, MB_OK);
end;

function bcomdevrootPath(Value: string): string;
begin
  Result := ExpandConstant('{app}/SolARLibraries');
  StringChangeEx(Result, '\', '/', True);
end;